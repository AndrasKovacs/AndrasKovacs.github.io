How many times specializaion failed for a symbol during Agda build, without -foptimise-heavily

Total number of failed specs: 5769
Distinct symbols: 1645

("Agda.TypeChecking.Monad.Base.$fReadTCStateTCMT",97)
("Agda.TypeChecking.Monad.Base.$fHasOptionsTCMT",80)
("Agda.TypeChecking.Monad.Base.$fMonadFreshiTCMT",76)
("Agda.TypeChecking.Monad.Base.$fMonadTCEnvTCMT",76)
("useTC",60)
("ghc-prim:GHC.Classes.C:Ord",57)
("ghc-prim:GHC.Classes.$fEqList_$c==",53)
("Agda.Syntax.Translation.AbstractToConcrete.runAbsToCon",50)
("GHC.List.elem",50)
("Agda.TypeChecking.Monad.Builtin.$fHasBuiltinsTCMT",48)
("Agda.TypeChecking.Monad.Base.$fMonadFailTCMT",47)
("Agda.TypeChecking.Pretty.$fPrettyTCMCandidate_$cprettyTCM1",45)
("prettyList_",44)
("typeError",44)
("Agda.TypeChecking.Pretty.$fPrettyTCMCompareAs_$cprettyTCM1",43)
("Agda.TypeChecking.Monad.Base.$fMonadTCStateTCMT2",42)
("Agda.TypeChecking.Monad.Base.$fMonadReduceTCMT",40)
("Agda.TypeChecking.Monad.Context.$fAddContextTele_$caddContext",39)
("Agda.TypeChecking.Pretty.$fPrettyTCMPrettyContext_$cprettyTCM1",36)
("Test.QuickCheck.Property.$fTestableFUN_$cpropertyForAllShrinkShow",36)
("downFrom",35)
("GHC.Base.C:Monoid",33)
("consS",33)
("Agda.TypeChecking.Pretty.$fPrettyTCMRewriteRule_$sfsep",32)
("Agda.TypeChecking.Monad.Base.$fReadTCStateTCMT_$cp3HasOptions",30)
("Agda.TypeChecking.Pretty.$wprettyList",30)
("lookup",30)
("Agda.TypeChecking.Substitute.Class.$wsingletonS",29)
("Data.Traversable.C:Traversable",29)
("GHC.Show.$fShowMaybe_$cshowsPrec",27)
("useR",26)
("Data.Strict.Maybe.$fShowMaybe",25)
("Agda.TypeChecking.Substitute.$fSubstType''",24)
("Agda.TypeChecking.Telescope.$wtelViewUpTo'",24)
("__IMPOSSIBLE_VERBOSE__",24)
("Agda.TypeChecking.Monad.Base.$fHasOptionsTCMT_$cp1MonadTCM",23)
("GHC.Base.C:Applicative",23)
("Agda.Syntax.Common.$w$cshowsPrec2",22)
("Test.QuickCheck.Property.$fTestableFUN",22)
("buildClosure",22)
("punctuate",21)
("Agda.Syntax.Position.$fHasRangeList_$cgetRange",20)
("Agda.TypeChecking.Pretty.$fPrettyTCMArg4_$cprettyTCM",20)
("GHC.Show.$fShowList",20)
("GHC.Show.$w$cshowsPrec",20)
("nextFresh",20)
("Data.HashMap.Internal.hash",19)
("composeS",19)
("reportSDoc",19)
("Agda.Syntax.Common.$fShowWithOrigin",18)
("Agda.Syntax.Position.$fShowRange'_$cshowsPrec",18)
("Agda.TypeChecking.Monad.Closure.enterClosure_$senterClosure",18)
("Agda.Syntax.Concrete.Pretty.$fPrettyArg_$cprettyPrec",17)
("Agda.TypeChecking.Pretty.$fPrettyTCMElim'1_$cprettyTCM",17)
("Data.Set.Internal.$fEqSet_$c==",17)
("GHC.Base.C:Monad",17)
("GHC.Show.$fShow(,)_$cshowsPrec",17)
("Test.QuickCheck.Gen.variant1",17)
("ghc-prim:GHC.Classes.$fOrdList_$ccompare",17)
("Agda.Syntax.Common.$fShowArg_$cshowsPrec5",16)
("Agda.Syntax.Concrete.Pretty.$fPrettyArg_$cprettyList",16)
("Agda.Syntax.Internal.$fShowType''_$cshowsPrec",16)
("Agda.TypeChecking.Free.Lazy.$fFree(,,)_$cfreeVars'1",16)
("Agda.TypeChecking.Monad.Base.$fHasOptionsTCMT_$ccommandLineOptions",16)
("prettyList",16)
("Agda.Syntax.Position.$fPrettyInterval'_$cpretty",15)
("Agda.TypeChecking.Monad.Base.$fMonadTCMTCMT",15)
("Agda.TypeChecking.Monad.Base.$fReadTCStateTCMT_$clocallyTCState",15)
("Agda.TypeChecking.Monad.Context.$fAddContext(,)0_$caddContext",15)
("Data.Set.Internal.$fMonoidSet",15)
("GHC.Show.$fShowNonEmpty_$cshowsPrec",15)
("hasVerbosity",15)
("Agda.Syntax.Common.$fShowNamed",14)
("Agda.Syntax.Common.Pretty.$fPrettyList",14)
("nubOn",14)
("Agda.Syntax.Concrete.Pretty.$fPretty(,)_$cprettyList",13)
("Agda.TypeChecking.Free.Lazy.$fFreeEqualityView_$s$cfreeVars'",13)
("Agda.TypeChecking.Monad.Base.$fMonadTCStateTCMT",13)
("Agda.TypeChecking.Pretty.$fPrettyTCMDom'0_$cprettyTCM",13)
("Agda.TypeChecking.Pretty.$fPrettyTCMNLPSort_$cprettyTCM1",13)
("Agda.TypeChecking.Substitute.$fSubstDom'",13)
("vcat",13)
("Agda.Syntax.Position.C:SetRange",12)
("Agda.Syntax.Translation.AbstractToConcrete.$fToConcreteArg_$ctoConcrete",12)
("Agda.TypeChecking.Pretty.$fPrettyTCMMetaId_$cprettyTCM",12)
("Agda.TypeChecking.Pretty.$fPrettyTCMPattern'_$cprettyTCM",12)
("Agda.TypeChecking.Telescope.$fPiApplyMTerm_$cpiApplyM'",12)
("Data.Strict.Maybe.$fEqMaybe",12)
("List.isPrefixOf",12)
("compareAs",12)
("getBuiltin",12)
("getPrimitive",12)
("Agda.Syntax.Concrete.Pretty.$fPrettyNamed",11)
("Agda.Syntax.Internal.MetaVars.allMetas'_$sallMetas'1",11)
("Agda.Syntax.Position.$fEqRange'_$c==",11)
("Agda.Syntax.Translation.AbstractToConcrete.$fToConcreteNamed",11)
("Agda.TypeChecking.Monad.Modality.applyModalityToContextFunBody_$sapplyQuantityToJudgement",11)
("Agda.TypeChecking.Pretty.$fPrettyTCM(,)_$cprettyTCM",11)
("Control.Monad.Trans.State.Lazy.$fMonadStateT",11)
("ghc-prim:GHC.Classes.$fEq(,)",11)
("telViewUpTo'",11)
("Agda.Syntax.Internal.$fPrettySubstitution'_$cprettyPrec",10)
("Agda.TypeChecking.Substitute.$fSubstTele",10)
("Agda.TypeChecking.Telescope.$wtelViewUpToPath",10)
("Data.Set.Internal.$fShowSet_$cshowsPrec",10)
("GHC.Maybe.$fEqMaybe",10)
("GHC.Show.$fShow(,)",10)
("Test.QuickCheck.Arbitrary.$fArbitraryList",10)
("lookupMetaJudgement",10)
("lookupS",10)
("noConstraints",10)
("tasty-1.4.3-BOoXoejCOQfLv4EjIsoj19:Test.Tasty.Core.SingleTest",10)
("Agda.TypeChecking.Monad.Base.$fHasOptionsTCMT_$cp1HasOptions",9)
("Agda.TypeChecking.Monad.Base.$fMonadReduceTCMT1",9)
("Agda.TypeChecking.Monad.Context.$w$caddContext1",9)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugExceptT",9)
("Agda.TypeChecking.Names.$fHasBuiltinsNamesT",9)
("Agda.TypeChecking.Names.$fMonadErroreNamesT",9)
("Agda.TypeChecking.Names.$fMonadTCEnvNamesT",9)
("Agda.TypeChecking.Names.$fReadTCStateNamesT",9)
("Bench.billTo",9)
("Control.Monad.Error.Class.$fMonadErroreExceptT",9)
("Control.Monad.Error.Class.C:MonadError",9)
("Control.Monad.Trans.State.Lazy.$fFunctorStateT",9)
("Data.Sequence.Internal.$fNFDataFingerTree_$crnf",9)
("Data.Set.Internal.$fNFDataSet_$crnf",9)
("GHC.Ix.indexError",9)
("Internal.Helpers.isMonoid1",9)
("compareType",9)
("constructorForm",9)
("ghc-prim:GHC.Classes.$fEqList",9)
("intervalView'",9)
("pPi'",9)
("Agda.Syntax.Internal.$fShowType''",8)
("Agda.Syntax.Position.$fHasRangeNonEmpty_$cgetRange",8)
("Agda.TypeChecking.Names.$fApplicativeNamesT",8)
("Agda.TypeChecking.Names.bind1",8)
("Agda.TypeChecking.Substitute.$fSubstSort'",8)
("Control.Monad.Trans.State.Lazy.$fApplicativeStateT",8)
("Data.Sequence.Internal.$fEqSeq_$c==",8)
("Data.Sequence.Internal.$fOrdSeq_$ccompare",8)
("GHC.Base.$fOrdNonEmpty",8)
("base:Data.Semigroup.Internal.$fMonoidDual",8)
("garr",8)
("getLanguage",8)
("hashable-1.4.2.0-JpceLkdcZ7ZDqNNSVzcDJ:Data.Hashable.Class.C:Hashable",8)
("nPi'",8)
("Agda.Interaction.Options.HasOptions.C:HasOptions",7)
("Agda.Syntax.Concrete.Pretty.$fPretty(,)_$cpretty",7)
("Agda.TypeChecking.Monad.Base.$fMonadBlockBlockT",7)
("Agda.TypeChecking.Monad.Base.$fReadTCStateExceptT",7)
("Agda.TypeChecking.Monad.Base.C:MonadTCEnv",7)
("Agda.TypeChecking.Monad.Builtin.$fHasBuiltinsExceptT",7)
("Agda.TypeChecking.Monad.Pure.$fPureTCMBlockT",7)
("Agda.TypeChecking.Monad.Signature.$fHasConstInfoReaderT",7)
("Agda.TypeChecking.Pretty.$fPrettyTCMSubstitution'_$cprettyTCM",7)
("Agda.TypeChecking.Reduce.$fInstantiateFullList_$cinstantiateFull'",7)
("Agda.TypeChecking.Serialise.Base.$fICODEFUNFalse_$cicodeArgs",7)
("Agda.TypeChecking.Serialise.Base.C:EmbPrj",7)
("Agda.TypeChecking.Substitute.Class.C:Subst",7)
("Agda.TypeChecking.Telescope.$fPiApplyMArg",7)
("Control.Monad.Fail.C:MonadFail",7)
("Control.Monad.Trans.Writer.Lazy.$fMonadWriterT1",7)
("GHC.Base.$fOrdNonEmpty_$ccompare",7)
("P.prettyList_",7)
("applyModalityToContext",7)
("funFlag",7)
("inplaceS",7)
("intervalUnview'",7)
("isSizeTypeTest",7)
("prettyTCMPatternList",7)
("sep",7)
("singletonS",7)
("telViewUpToPathBoundary'",7)
("tickICode",7)
("Agda.Syntax.Abstract.$fShowPattern'",6)
("Agda.Syntax.Internal.$fShowSubstitution'_$cshowsPrec",6)
("Agda.Syntax.Internal.Elim.$fTraversableElim'_$ctraverse",6)
("Agda.Syntax.Position.$fShowRange'",6)
("Agda.TypeChecking.Free.Lazy.$fFree(,)_$cfreeVars'",6)
("Agda.TypeChecking.Monad.Base.$fMonadFailTCMT1",6)
("Agda.TypeChecking.Monad.Base.$fMonadTCEnvStateT",6)
("Agda.TypeChecking.Monad.Base.$fReadTCStateStateT",6)
("Agda.TypeChecking.Monad.Base.C:ReadTCState",6)
("Agda.TypeChecking.Monad.Signature.$fHasConstInfoStateT",6)
("Agda.TypeChecking.Names.bind4",6)
("Agda.TypeChecking.Pretty.$fPrettyTCMInt_$cprettyTCM",6)
("Agda.TypeChecking.Reduce.$fReduceArg_$creduceB'",6)
("Agda.TypeChecking.Substitute.$fSubstList",6)
("Agda.Utils.Functor.C:Decoration",6)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.fromEdges2",6)
("Control.Monad.Error.Class.$fMonadErroreExceptT1",6)
("Control.Monad.IO.Class.C:MonadIO",6)
("Control.Monad.State.Class.C:MonadState",6)
("Control.Monad.Trans.Except.$fMonadExceptT",6)
("Control.Monad.Trans.Reader.$fMonadReaderT",6)
("Data.Map.Internal.$fEqMap_$c==",6)
("Data.Map.Internal.$fNFDataMap_$crnf",6)
("Data.Map.Internal.$fShowMap_$cshowsPrec",6)
("Test.QuickCheck.Arbitrary.$fArbitrary(,)1",6)
("base:Data.Semigroup.Internal.$fMonoidSum",6)
("canonicalName",6)
("curIF",6)
("dontAssignMetas",6)
("isPrefixOf",6)
("lookupInteractionId",6)
("pathView'",6)
("Agda.Compiler.Backend.Backend",5)
("Agda.Syntax.Common.Pretty.prettyList_",5)
("Agda.Syntax.Internal.$fKillRangeDom'_$ckillRange",5)
("Agda.Syntax.Internal.$fLensSortDom'",5)
("Agda.Syntax.Internal.$fShowDom'_$cshowsPrec",5)
("Agda.Syntax.Internal.Blockers.$fMonoidBlocked'_$c<>",5)
("Agda.Syntax.Internal.Elim.$fPrettyElim'_$cprettyList",5)
("Agda.Syntax.Internal.Elim.$fPrettyElim'_$cprettyPrec",5)
("Agda.Syntax.Internal.Elim.$w$cshowsPrec",5)
("Agda.Syntax.Internal.Generic.$fTermLike(,)_$ctraverseTermM1",5)
("Agda.Syntax.Internal.MetaVars.allMetas'_$sallMetas'",5)
("Agda.TypeChecking.Coverage.SplitTree.$fPrettySplitTree'_$cpretty",5)
("Agda.TypeChecking.Monad.Base.$fHasOptionsTCMT_$cpragmaOptions",5)
("Agda.TypeChecking.Monad.Base.$fMonadTCEnvExceptT",5)
("Agda.TypeChecking.Monad.Base.C:MonadTCState",5)
("Agda.TypeChecking.Monad.Builtin.C:HasBuiltins",5)
("Agda.TypeChecking.Monad.Context.C:MonadAddContext",5)
("Agda.TypeChecking.Monad.Context.underAbstraction_$sunderAbstraction",5)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugStateT",5)
("Agda.TypeChecking.Monad.Debug.C:MonadDebug",5)
("Agda.TypeChecking.Monad.Pure.C:PureTCM",5)
("Agda.TypeChecking.Monad.Signature.$fHasConstInfoExceptT",5)
("Agda.TypeChecking.Monad.Signature.$fHasConstInfoExceptT_$cgetConstInfo",5)
("Agda.TypeChecking.Monad.Signature.C:HasConstInfo",5)
("Agda.TypeChecking.Names.open1",5)
("Agda.TypeChecking.Pretty.$fPrettyTCMArg3_$cprettyTCM",5)
("Agda.TypeChecking.Pretty.$fPrettyTCMModality_$cprettyTCM",5)
("Agda.TypeChecking.Pretty.Constraint.$fPrettyTCMConstraint_$cprettyTCM",5)
("Agda.TypeChecking.Reduce.$fNormalise(,)_$cnormalise'",5)
("Agda.TypeChecking.Reduce.$fReduce(,)_$creduce'",5)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjList_$cvalue",5)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjMaybe0",5)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjMaybe2",5)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjSet",5)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjSet_$cvalue",5)
("Agda.TypeChecking.Substitute.$fSubstAbs",5)
("Agda.TypeChecking.Substitute.$fSubstArg",5)
("Agda.TypeChecking.Telescope.$fPiApplyMList_$cpiApplyM'",5)
("Agda.Utils.RangeMap.$fMonoidRangeMap_$c<>",5)
("Control.Monad.Trans.Except.$fMonadExceptT1",5)
("Control.Monad.Trans.Writer.Lazy.$fMonadWriterT",5)
("Data.Map.Internal.$w$cshowsPrec",5)
("Data.Strict.Maybe.$fOrdMaybe",5)
("GHC.Base.$fEqNonEmpty",5)
("Test.QuickCheck.Modifiers.$fArbitraryNonNegative_$carbitrary",5)
("addClauses",5)
("allMetas'",5)
("compareElims",5)
("fastDistinct",5)
("getBuiltinName",5)
("getFullyAppliedConType",5)
("getSigmaKit",5)
("getTerm",5)
("ghc-prim:GHC.Classes.$fOrd(,)",5)
("hPi'",5)
("isProblemSolved",5)
("isPropM",5)
("lookupMetaInstantiation",5)
("newArgsMeta'",5)
("telePatterns'",5)
("use",5)
("withScope",5)
("Agda.Syntax.Abstract.Pattern.$fAPatternLikePattern'_$cfoldrAPattern",4)
("Agda.Syntax.Common.$fEqRanged",4)
("Agda.Syntax.Common.$fNFDataImportDirective'_$crnf",4)
("Agda.Syntax.Concrete.Pretty.$fPretty(,)",4)
("Agda.Syntax.Concrete.Pretty.$fPrettyArg",4)
("Agda.Syntax.Internal.$fPrettyDom'_$cprettyList",4)
("Agda.Syntax.Internal.$fPrettySubstitution'",4)
("Agda.Syntax.Internal.$fShowDom'",4)
("Agda.Syntax.Internal.$fShowLevel'_$cshowsPrec",4)
("Agda.Termination.SparseMatrix.$fEqMatrix_$c==",4)
("Agda.TypeChecking.CompiledClause.$fShowCompiledClauses'_$cshowsPrec",4)
("Agda.TypeChecking.Free.Lazy.$fFreeDom'_$s$cfreeVars'",4)
("Agda.TypeChecking.Monad.Base.$fMonadReduceExceptT",4)
("Agda.TypeChecking.Monad.Base.$fMonadTCEnvReaderT",4)
("Agda.TypeChecking.Monad.Base.$fMonadTCEnvReaderT_$clocalTC",4)
("Agda.TypeChecking.Monad.Base.$fReadTCStateReaderT",4)
("Agda.TypeChecking.Monad.Base.C:MonadReduce",4)
("Agda.TypeChecking.Monad.Base.C:MonadTCM",4)
("Agda.TypeChecking.Monad.Builtin.$fHasBuiltinsReaderT",4)
("Agda.TypeChecking.Monad.Context.$fMonadAddContextExceptT",4)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugBlockT_$cnowDebugPrinting",4)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugBlockT_$ctraceDebugMessage",4)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugMaybeT",4)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugReaderT",4)
("Agda.TypeChecking.Monad.Signature.$fHasConstInfoReaderT_$cgetConstInfo",4)
("Agda.TypeChecking.Pretty.$fPrettyTCMBlocker_$cprettyTCM",4)
("Agda.TypeChecking.Pretty.$fPrettyTCMClause_$cprettyTCM1",4)
("Agda.TypeChecking.Pretty.Constraint.$fPrettyTCMProblemConstraint_$cprettyTCM",4)
("Agda.TypeChecking.Primitive.Base.garr",4)
("Agda.TypeChecking.Reduce.$fInstantiateFull(,)_$cinstantiateFull'",4)
("Agda.TypeChecking.Reduce.$fNormaliseList_$cnormalise'",4)
("Agda.TypeChecking.Reduce.$fReduceArg",4)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjList",4)
("Agda.TypeChecking.Telescope.Path.$fIApplyVarsPattern'_$ciApplyVars",4)
("Agda.Utils.List2.$fShowList2_$cshowsPrec",4)
("Agda.Utils.RangeMap.$fShowRangeMap_$cshowsPrec",4)
("Control.Monad.Reader.Class.$fMonadReaderrReaderT",4)
("Control.Monad.State.Class.$fMonadStatesStateT0",4)
("Control.Monad.Trans.Reader.$fMonadIOReaderT",4)
("Control.Monad.Trans.State.Lazy.$fAlternativeStateT3",4)
("Data.HashMap.Internal.equalKeys",4)
("GHC.Exception.Type.C:Exception",4)
("GHC.Exception.Type.SomeException",4)
("GHC.Real.C:Integral",4)
("GHC.Real.C:Real",4)
("List.stripPrefix",4)
("Test.QuickCheck.Arbitrary.$fArbitraryList1",4)
("applyDef",4)
("applyRelevanceToContextOnly",4)
("billTo",4)
("combineSys'",4)
("defaultAction",4)
("defaultGetRewriteRulesFor",4)
("distinct",4)
("getVisitedModule",4)
("ghc-prim:GHC.Classes.$fEq(,,)_$c==",4)
("glam",4)
("isEtaRecordType",4)
("lookupBV",4)
("lookupMutualBlock",4)
("modifyGlobalDefinition",4)
("sameModality",4)
("splitExactlyAt",4)
("throw",4)
("traceSDoc",4)
("usableAtModality'",4)
("$crecurseExpr",3)
("$cshrinkC",3)
("$ctoConcrete",3)
("$ctraverseTermM",3)
("<@@>",3)
("Agda.Syntax.Abstract.$fTraversablePattern'_$ctraverse",3)
("Agda.Syntax.Common.$fEqImportDirective'_$c==",3)
("Agda.Syntax.Common.$fEqNamed_$c==",3)
("Agda.Syntax.Common.$fEqTerminationCheck_$c==",3)
("Agda.Syntax.Common.$fEqWithOrigin",3)
("Agda.Syntax.Common.$fNFDataRecordDirectives'_$crnf",3)
("Agda.Syntax.Common.$fShowArg",3)
("Agda.Syntax.Common.$fShowRanged_$cshowsPrec",3)
("Agda.Syntax.Common.$fShowRecordDirectives'_$cshowsPrec",3)
("Agda.Syntax.Common.$fShowTerminationCheck_$cshowsPrec",3)
("Agda.Syntax.Common.$w$cshowsPrec15",3)
("Agda.Syntax.Common.C:Underscore",3)
("Agda.Syntax.Common.Pretty.$fPrettyDoc_$cprettyList",3)
("Agda.Syntax.Common.Pretty.$fPrettyMaybe_$cprettyList",3)
("Agda.Syntax.Concrete.Pattern.$fCPatternLikePattern_$cfoldrCPattern",3)
("Agda.Syntax.Concrete.Pretty.$fPrettyBinder'",3)
("Agda.Syntax.Internal.$fShowPattern'",3)
("Agda.Syntax.Internal.Blockers.$fMonoidBlocked'",3)
("Agda.Syntax.Internal.Blockers.$w$cshowsPrec",3)
("Agda.Syntax.Internal.Generic.$fTermLikeArg",3)
("Agda.Syntax.Internal.Generic.$fTermLikeElim'",3)
("Agda.Syntax.Internal.Generic.$fTermLikeList_$ctraverseTermM",3)
("Agda.Syntax.Position.$fHasRange(,,)_$cgetRange",3)
("Agda.Syntax.Position.$fShowInterval'_$cshowsPrec",3)
("Agda.Syntax.Position.$fShowRange'_$cshow",3)
("Agda.Syntax.Position.$w$cgetRange",3)
("Agda.Syntax.Translation.AbstractToConcrete.$fToConcreteBinder'",3)
("Agda.Syntax.Translation.AbstractToConcrete.$fToConcreteClause'_$ctoConcrete",3)
("Agda.Syntax.Translation.AbstractToConcrete.$fToConcreteList_$ctoConcrete",3)
("Agda.Termination.SparseMatrix.$fDiagonalMatrixb_$cdiagonal",3)
("Agda.Termination.SparseMatrix.$fPrettyMatrix_$cpretty",3)
("Agda.TypeChecking.CheckInternal.$fCheckInternalTerm_$ccheckInternal",3)
("Agda.TypeChecking.Constraints.noConstraints",3)
("Agda.TypeChecking.Free.Lazy.$w$cmconcat",3)
("Agda.TypeChecking.Free.Lazy.C:IsVarSet",3)
("Agda.TypeChecking.Monad.Base.$fMonadFreshiTCMT1",3)
("Agda.TypeChecking.Monad.Base.$fMonadIOTCMT1",3)
("Agda.TypeChecking.Monad.Base.$fMonadReduceExceptT_$cliftReduce",3)
("Agda.TypeChecking.Monad.Base.$fMonadTCEnvStateT_$clocalTC",3)
("Agda.TypeChecking.Monad.Base.$fMonadTCMExceptT",3)
("Agda.TypeChecking.Monad.Base.$fMonadTCMReaderT",3)
("Agda.TypeChecking.Monad.Builtin.$fHasBuiltinsStateT",3)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugWriterT",3)
("Agda.TypeChecking.Monad.Pure.$fPureTCMReaderT",3)
("Agda.TypeChecking.Monad.Pure.$fPureTCMWriterT",3)
("Agda.TypeChecking.Names.$fMonadReduceNamesT",3)
("Agda.TypeChecking.Names.$fSubstAbsN_$capplySubst",3)
("Agda.TypeChecking.Names.glam",3)
("Agda.TypeChecking.Pretty.$fPrettyTCMAbstractName_$cprettyTCM1",3)
("Agda.TypeChecking.Pretty.$fPrettyTCMArg0_$cprettyTCM",3)
("Agda.TypeChecking.Pretty.$fPrettyTCMDom'_$cprettyTCM",3)
("Agda.TypeChecking.Pretty.$fPrettyTCMNamedClause_$cprettyTCM",3)
("Agda.TypeChecking.Reduce.$fInstantiateFullDom'_$cinstantiateFull'",3)
("Agda.TypeChecking.Reduce.$fNormaliseTele_$cnormalise'",3)
("Agda.TypeChecking.Reduce.$fReduceList_$creduce'",3)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjArg",3)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjMap",3)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjMap1",3)
("Agda.TypeChecking.Substitute.$fSubstType''_$capplySubst",3)
("Agda.Utils.Benchmark.C:MonadBench",3)
("Agda.Utils.BiMap.adjust_$salterM",3)
("Agda.Utils.Boolean.C:IsBool",3)
("Agda.Utils.SemiRing.C:StarSemiRing",3)
("Agda.Utils.Singleton.C:Collection",3)
("Agda.Utils.Trie.$fEqTrie_$c==",3)
("Agda.Utils.Update.$fMonadChangeChangeT",3)
("BiMap.invLookup",3)
("BiMap.lookup",3)
("Control.Monad.Error.Class.$fMonadErroreReaderT",3)
("Control.Monad.Error.Class.$fMonadErroreStateT0",3)
("Control.Monad.Error.Class.$fMonadErroreWriterT1",3)
("Control.Monad.Reader.Class.C:MonadReader",3)
("Control.Monad.Trans.Except.$fMonadFailExceptT",3)
("Control.Monad.Trans.Reader.$fMonadFailReaderT",3)
("Control.Monad.Trans.Reader.$fMonadReaderT_$creturn",3)
("Control.Monad.Trans.State.Lazy.$fMonadFailStateT",3)
("Control.Monad.Trans.State.Lazy.$fMonadIOStateT",3)
("Control.Monad.Trans.Writer.Lazy.$fApplicativeWriterT",3)
("Control.Monad.Trans.Writer.Lazy.$fApplicativeWriterT2",3)
("Data.Either.$fShowEither_$cshowsPrec",3)
("Data.Either.$w$cshowsPrec",3)
("Data.Foldable.$fFoldableList_$cfoldMap",3)
("Data.HashMap.Internal.$fNFDataHashMap_$crnf",3)
("Data.IntMap.Internal.equal",3)
("Data.Sequence.Internal.$fOrdSeq_$c<=",3)
("Data.Sequence.Internal.$fShowSeq_$cshowsPrec",3)
("Data.Traversable.$fTraversableNonEmpty_$ctraverse",3)
("GHC.Base.$fOrdNonEmpty_$c>=",3)
("GHC.Show.$fShowNonEmpty",3)
("Internal.Helpers.natural1",3)
("Internal.Helpers.positive1",3)
("System.Process.Common.readCreateProcessStrict1",3)
("Test.QuickCheck.Arbitrary.$fArbitraryFUN",3)
("Test.QuickCheck.Arbitrary.$fCoArbitraryEndo_$ccoarbitrary",3)
("Test.QuickCheck.Gen.$wchooseEnum",3)
("Test.QuickCheck.Modifiers.$fArbitraryPositive_$carbitrary",3)
("Trie.unionWith",3)
("applyCohesionToContextOnly",3)
("base:Data.OldList.isPrefixOf",3)
("bind",3)
("checkType",3)
("complete",3)
("computePolarity",3)
("decomposeInterval'",3)
("equalSort",3)
("getBuiltinSize",3)
("getOpen",3)
("getTerm'",3)
("ghc-prim:GHC.Classes.$fOrdList",3)
("gpi",3)
("hashable-1.4.2.0-JpceLkdcZ7ZDqNNSVzcDJ:Data.Hashable.Class.$fHashableList",3)
("hsep",3)
("imax",3)
("insertImplicitPatternsT",3)
("isDistributive",3)
("isEtaVar",3)
("isInteractionMeta",3)
("isIrrelevantOrPropM",3)
("key",3)
("litType",3)
("makeOpen",3)
("mul",3)
("newProblem",3)
("newValueMeta",3)
("nubAndDuplicatesOn",3)
("pathViewAsPi'whnf",3)
("prependS",3)
("prettyMap",3)
("prettyTCMPatterns",3)
("pureEqualTerm",3)
("renaming",3)
("renamingR",3)
("runAbsToCon",3)
("scopeLookup'",3)
("setMetaNameSuggestion",3)
("shouldReduceDef",3)
("sortOf",3)
("telViewUpToPath",3)
("text",3)
("underAbstraction",3)
("viewTC",3)
("wakeupConstraints",3)
("$$",2)
("$capplySubst",2)
("$cnoShrink",2)
("$cshowsPrec",2)
("$fMonadFailTCMT",2)
("$fMonadFreshiTCMT",2)
("<+>",2)
("===",2)
("Agda.Auto.NarrowingSearch.mmcase1",2)
("Agda.Auto.NarrowingSearch.mmpcase1",2)
("Agda.Interaction.BasicOps.$fPrettyIPFace'_$cpretty",2)
("Agda.Interaction.BasicOps.$fPrettyOutputConstraint'_$cpretty",2)
("Agda.Interaction.BasicOps.$fPrettyOutputForm_$cpretty",2)
("Agda.Interaction.BasicOps.$fToConcreteOutputConstraint'_$ctoConcrete",2)
("Agda.Syntax.Abstract.$fTraversableLHSCore'_$ctraverse",2)
("Agda.Syntax.Abstract.$w$cshowsPrec7",2)
("Agda.Syntax.Abstract.Name.$fLensFixityQName_$clensFixity",2)
("Agda.Syntax.Abstract.Views.$fExprLikeExpr_$cfoldExpr",2)
("Agda.Syntax.Common.$fEqArg",2)
("Agda.Syntax.Common.$fEqRecordDirectives'_$c==",2)
("Agda.Syntax.Common.$fHasRangeRewriteEqn'_$cgetRange",2)
("Agda.Syntax.Common.$fKillRangeImportDirective'_$ckillRange",2)
("Agda.Syntax.Common.$fKillRangeRewriteEqn'_$ckillRange",2)
("Agda.Syntax.Common.$fNFDataRewriteEqn'_$crnf",2)
("Agda.Syntax.Common.$fOrdImportedName'_$ccompare",2)
("Agda.Syntax.Common.$fShowRewriteEqn'_$cshowsPrec",2)
("Agda.Syntax.Common.$fShowWithOrigin_$cshowsPrec",2)
("Agda.Syntax.Common.$w$cshowsPrec7",2)
("Agda.Syntax.Common.Pretty.$fPrettyDoc",2)
("Agda.Syntax.Common.Pretty.$fPrettyIntMap_$sprettyMap",2)
("Agda.Syntax.Common.Pretty.$fPrettyNonEmpty",2)
("Agda.Syntax.Concrete.$w$cshowsPrec1",2)
("Agda.Syntax.Concrete.Pretty.$fShowImportDirective'_$cshowsPrec1",2)
("Agda.Syntax.Info.$fShowDefInfo'_$cshowsPrec",2)
("Agda.Syntax.Internal.$fLensSortArg",2)
("Agda.Syntax.Internal.$fNFDataDom'_$crnf",2)
("Agda.Syntax.Internal.$fPrettyBlocked'_$cpretty",2)
("Agda.Syntax.Internal.$fPrettyPattern'",2)
("Agda.Syntax.Internal.$fPrettyTele",2)
("Agda.Syntax.Internal.$fShowSubstitution'",2)
("Agda.Syntax.Internal.$fShowTele",2)
("Agda.Syntax.Internal.$fTraversableTele_$ctraverse",2)
("Agda.Syntax.Internal.Blockers.$fShowBlocked'",2)
("Agda.Syntax.Internal.Defs.$fMonadGetDefsReaderT",2)
("Agda.Syntax.Internal.Elim.$fPrettyElim'",2)
("Agda.Syntax.Internal.Generic.$fTermLike(,)",2)
("Agda.Syntax.Internal.Generic.$fTermLikeDom'",2)
("Agda.Syntax.Internal.Generic.$fTermLikeList",2)
("Agda.Syntax.Internal.MetaVars.$fAllMetas(,,,)_$callMetas",2)
("Agda.Syntax.Internal.Names.$fNamesInBuiltin_$cnamesAndMetasIn'1",2)
("Agda.Syntax.Internal.Names.$fNamesInDefinition_$cnamesAndMetasIn'2",2)
("Agda.Syntax.Internal.Names.$fNamesInDefinition_$cnamesAndMetasIn'4",2)
("Agda.Syntax.Internal.Pattern.$fPatternLikeaPattern'_$cfoldrPattern",2)
("Agda.Syntax.Internal.Suggestion",2)
("Agda.Syntax.Position.$fHasRange(,,,)_$cgetRange",2)
("Agda.Syntax.Position.$fKillRangeSet_$ckillRange",2)
("Agda.Syntax.Position.$fOrdRange'",2)
("Agda.Syntax.Position.$fPrettyRange'",2)
("Agda.Syntax.Position.$fShowPosition'_$cshowsPrec",2)
("Agda.Syntax.Translation.AbstractToConcrete.$fToConcreteArg",2)
("Agda.Syntax.Translation.InternalToAbstract.$fReifyNamedClause_$creify",2)
("Agda.Syntax.Translation.InternalToAbstract.reifyTerm",2)
("Agda.Termination.Order.$fNotWorseMatrix_$cnotWorse",2)
("Agda.Termination.Semiring.C:HasZero",2)
("Agda.Termination.SparseMatrix.$fOrdMatrix_$c<",2)
("Agda.Termination.SparseMatrix.$fOrdMatrix_$ccompare",2)
("Agda.Termination.SparseMatrix.$fShowMatrix_$cshowsPrec",2)
("Agda.Termination.SparseMatrix.$fTransposeMatrix_$ctranspose",2)
("Agda.TypeChecking.CheckInternal.$fCheckInternalLevel'_$ccheckInternal'",2)
("Agda.TypeChecking.Free.Lazy.$fFreeArg_$cfreeVars'",2)
("Agda.TypeChecking.Free.Lazy.$fFreeDom'_$cfreeVars'1",2)
("Agda.TypeChecking.Free.Lazy.$fFreeElim'_$cfreeVars'",2)
("Agda.TypeChecking.Free.Lazy.$fFreeEqualityView_$s$cfreeVars'1",2)
("Agda.TypeChecking.Free.Lazy.$fFreeTele_$cfreeVars'",2)
("Agda.TypeChecking.Free.Lazy.$fIsVarSetaVarMap'",2)
("Agda.TypeChecking.Free.Lazy.$fShowVarMap'_$cshowsPrec",2)
("Agda.TypeChecking.Monad.Base.$fMonadTCEnvBlockT_$clocalTC",2)
("Agda.TypeChecking.Monad.Base.$fMonadTCEnvMaybeT",2)
("Agda.TypeChecking.Monad.Base.$fMonadTCEnvTCMT2",2)
("Agda.TypeChecking.Monad.Base.$fMonadTCEnvWriterT",2)
("Agda.TypeChecking.Monad.Base.$fMonadTCMBlockT_$cliftTCM",2)
("Agda.TypeChecking.Monad.Base.$fMonadTCMExceptT_$cp1MonadTCM",2)
("Agda.TypeChecking.Monad.Base.$fMonadTCMExceptT_$cp3MonadTCM",2)
("Agda.TypeChecking.Monad.Base.$fMonadTCMReaderT_$cliftTCM",2)
("Agda.TypeChecking.Monad.Base.$fMonadTCMReaderT_$cp1MonadTCM",2)
("Agda.TypeChecking.Monad.Base.$fMonadTCMReaderT_$cp3MonadTCM",2)
("Agda.TypeChecking.Monad.Base.$fMonadTCMStateT",2)
("Agda.TypeChecking.Monad.Base.$fMonadTCMT1",2)
("Agda.TypeChecking.Monad.Base.$fMonoidTCMT_$cmconcat",2)
("Agda.TypeChecking.Monad.Base.$fReadTCStateExceptT_$cp1ReadTCState",2)
("Agda.TypeChecking.Monad.Base.$fReadTCStateMaybeT",2)
("Agda.TypeChecking.Monad.Base.$fReadTCStateReaderT_$clocallyTCState",2)
("Agda.TypeChecking.Monad.Base.$fReadTCStateWriterT",2)
("Agda.TypeChecking.Monad.Base.$fTraversableIPBoundary'_$ctraverse",2)
("Agda.TypeChecking.Monad.Base.C:MonadBlock",2)
("Agda.TypeChecking.Monad.Base.C:MonadFresh",2)
("Agda.TypeChecking.Monad.Base.C:MonadStConcreteNames",2)
("Agda.TypeChecking.Monad.Context.$fMonadAddContextBlockT_$cupdateContext",2)
("Agda.TypeChecking.Monad.Context.$fMonadAddContextReaderT",2)
("Agda.TypeChecking.Monad.Context.$fMonadAddContextStateT",2)
("Agda.TypeChecking.Monad.Context.$wunderAbstraction",2)
("Agda.TypeChecking.Monad.Context.underAbstractionAbs_$sunderAbstractionAbs'",2)
("Agda.TypeChecking.Monad.MetaVars.C:MonadInteractionPoints",2)
("Agda.TypeChecking.Monad.Pure.$fPureTCMMaybeT",2)
("Agda.TypeChecking.Monad.Pure.$fPureTCMStateT",2)
("Agda.TypeChecking.Monad.Signature.$fHasConstInfoChangeT",2)
("Agda.TypeChecking.Monad.Statistics.C:MonadStatistics",2)
("Agda.TypeChecking.Monad.Trace.$fMonadTraceReaderT_$ctraceCall",2)
("Agda.TypeChecking.Monad.Trace.$fMonadTraceStateT",2)
("Agda.TypeChecking.Names.$fHasBuiltinsNamesT_$cp3HasBuiltins",2)
("Agda.TypeChecking.Names.$fMonadDebugNamesT",2)
("Agda.TypeChecking.Names.$fPureTCMNamesT",2)
("Agda.TypeChecking.Names.$fSubstAbsN",2)
("Agda.TypeChecking.Names.abstractN1",2)
("Agda.TypeChecking.Names.appTel1",2)
("Agda.TypeChecking.Patterns.Abstract.$fExpandPatternSynonymsList_$cexpandPatternSynonyms",2)
("Agda.TypeChecking.Pretty.$fPrettyTCM(,,)_$cprettyTCM",2)
("Agda.TypeChecking.Pretty.$fPrettyTCMBlocked'_$cprettyTCM",2)
("Agda.TypeChecking.Pretty.$fPrettyTCMCompareAs_$cprettyTCM",2)
("Agda.TypeChecking.Pretty.$fPrettyTCMDisplayTerm_$cprettyTCM",2)
("Agda.TypeChecking.Pretty.$fPrettyTCMElim'_$cprettyTCM1",2)
("Agda.TypeChecking.Pretty.$fPrettyTCMLevel'_$cprettyTCM",2)
("Agda.TypeChecking.Pretty.$fPrettyTCMName_$cprettyTCM",2)
("Agda.TypeChecking.Pretty.$fPrettyTCMRange'_$cprettyTCM",2)
("Agda.TypeChecking.Pretty.$fPrettyTCMRewriteRule_$cprettyTCM",2)
("Agda.TypeChecking.Records.$fNormaliseProjPList_$cnormaliseProjP",2)
("Agda.TypeChecking.Records.$winsertMissingFields",2)
("Agda.TypeChecking.Reduce.$fInstantiateFull(,,,)_$cinstantiateFull'",2)
("Agda.TypeChecking.Reduce.$fReduceAbs",2)
("Agda.TypeChecking.Rules.LHS.Problem.$fShowFlexibleVar_$cshowsPrec1",2)
("Agda.TypeChecking.Rules.LHS.Unify.Types.$fPrettyTCMUnifyState_$cprettyTCM",2)
("Agda.TypeChecking.Rules.LHS.Unify.Types.$fPrettyTCMUnifyStep_$cprettyTCM",2)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrj(,)",2)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjHashMap",2)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjHashMap1",2)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjList_$cicod_",2)
("Agda.TypeChecking.SizedTypes.Utils.C:Dioid",2)
("Agda.TypeChecking.SizedTypes.Utils.C:Top",2)
("Agda.TypeChecking.Substitute.$fDeBruijnPattern'",2)
("Agda.TypeChecking.Substitute.$fSubst(,)",2)
("Agda.TypeChecking.Substitute.$fSubstElim'",2)
("Agda.TypeChecking.Substitute.$fSubstLevel'",2)
("Agda.TypeChecking.Substitute.$fSubstNamed",2)
("Agda.TypeChecking.Substitute.$fSubstPlusLevel'",2)
("Agda.TypeChecking.Substitute.$wrenaming",2)
("Agda.TypeChecking.Substitute.DeBruijn.$fDeBruijnNamed",2)
("Agda.TypeChecking.Telescope.$wtelViewUpToPathBoundary'",2)
("Agda.TypeChecking.Warnings.$fMonadWarningStateT",2)
("Agda.TypeChecking.Warnings.warnings'",2)
("Agda.Utils.BiMap.$w$salterM",2)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.$fOrdEdge_$ccompare",2)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.$wgaussJordanFloydWarshallMcNaughtonYamada",2)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.composeWith1",2)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.renameNodesMonotonic1",2)
("Agda.Utils.List.stripReversedSuffix",2)
("Agda.Utils.List2.$fEqList2_$c==",2)
("Agda.Utils.List2.$fTraversableList2_$ctraverse",2)
("Agda.Utils.ListT.$fMonadListT_$c>>=",2)
("Agda.Utils.PartialOrd.$fPartialOrdInclusion_$ccomparable1",2)
("Agda.Utils.RangeMap.$fShowRangeMap",2)
("Agda.Utils.SemiRing.$fStarSemiRingMaybe",2)
("Agda.Utils.Semigroup.$fSemigroupReaderT",2)
("Agda.Utils.SmallSet.C:SmallSetElement",2)
("Agda.Utils.Trie.$fNFDataTrie_$crnf",2)
("AssocList.updateAt",2)
("C.lensQNameName",2)
("CC.topLevelModuleName",2)
("Control.Monad.Trans.Except.$fFunctorExceptT",2)
("Control.Monad.Trans.Maybe.$fApplicativeMaybeT",2)
("Control.Monad.Trans.Maybe.$fMonadMaybeT",2)
("Control.Monad.Trans.Reader.$fApplicativeReaderT",2)
("Control.Monad.Trans.State.Lazy.$fApplicativeStateT1",2)
("Control.Monad.Trans.State.Lazy.$fFunctorStateT1",2)
("Control.Monad.Writer.Class.$fMonadWriterwWriterT0",2)
("Data.HashSet.Internal.$fShowHashSet_$cshowsPrec",2)
("Data.IntMap.Internal.$fNFDataIntMap_$crnf",2)
("Data.IntMap.Internal.$fShowIntMap_$cshowsPrec",2)
("Data.Map.Internal.$fMonoidMap",2)
("Data.Set.Internal.$fEqSet",2)
("GHC.Base.$fMonoidFUN",2)
("GHC.Base.$fSemigroupFUN",2)
("GHC.Base.C:Alternative",2)
("GHC.Ix.C:Ix",2)
("GHC.Show.$fShow(,,)_$cshowsPrec",2)
("GHC.Show.$fShowMaybe",2)
("GHC.Show.$w$cshowsPrec2",2)
("List1.union",2)
("SmallSet.elems",2)
("System.Console.Haskeline.promptedInput",2)
("System.Process.Common.$fProcessResulttext(,,)",2)
("Test.QuickCheck.Arbitrary.$fCoArbitrarySeq_$ccoarbitrary",2)
("Test.QuickCheck.Function.$fArbitraryFun1",2)
("Test.QuickCheck.Function.$fArbitraryFun_$cshrink",2)
("Test.QuickCheck.Function.showFunction",2)
("Trie.lookup",2)
("abstractToConcreteScope",2)
("addFlexRig",2)
("addOrUnblocker",2)
("applyN",2)
("bindN",2)
("bindNArg",2)
("checkOpts",2)
("checkpointSubstitution'",2)
("cluster'",2)
("coerce",2)
("combineSys",2)
("commonPrefix",2)
("compareSort",2)
("compareTermOnFace",2)
("compareTermOnFace'",2)
("composeFlexRig",2)
("connectInteractionPoint",2)
("constructorForm'",2)
("dirty",2)
("editDistance",2)
("enterClosure",2)
("etaExpandClause",2)
("etaExpandListeners",2)
("expandLitPattern",2)
("explainWhyInScope",2)
("finally",2)
("findOverlap",2)
("fittingNamedArg",2)
("forallFaceMaps",2)
("fromLists",2)
("getConstraintsForProblem",2)
("getErasedConArgs",2)
("getMetaTypeInContext",2)
("getModuleParameterSub",2)
("getOriginalConstInfo",2)
("getPartialDefs",2)
("getTypedHead",2)
("ghc-prim:GHC.Classes.$fEq(,,,)_$c==",2)
("hang",2)
("haskeline-0.8.2.1:System.Console.Haskeline.InputT.$fMonadCatchInputT1",2)
("haskeline-0.8.2.1:System.Console.Haskeline.InputT.$wrunInputTBehavior",2)
("hcat",2)
("headStop",2)
("hfill",2)
("ifTopLevelAndHighlightingLevelIsOr",2)
("imin",2)
("implicitNamedArgs",2)
("infer",2)
("instantiateRewriteRules",2)
("isDatatypeModule",2)
("isEtaOrCoinductiveRecordConstructor",2)
("isEtaRecord",2)
("isRecordConstructor",2)
("isSingletonType'",2)
("iterate'",2)
("levelView",2)
("listS",2)
("lookupLocalMeta",2)
("lookupLocalMeta'",2)
("lookupMeta",2)
("mapAbstraction",2)
("metasCreatedBy",2)
("mustBePi",2)
("nonLinMatch",2)
("pretty",2)
("prettyWarning",2)
("printStatistics",2)
("productOfEdgesInBoundedWalk",2)
("quotedName",2)
("reduceProjectionLike",2)
("registerInteractionPoint",2)
("sayWhen",2)
("setTerminates",2)
("shouldPostponeInstanceSearch",2)
("showThousandSep",2)
("sizeType",2)
("sizeView",2)
("sortKit",2)
("telViewUpToPathBoundary",2)
("toLType",2)
("toLists",2)
("translateCompiledClauses",2)
("unfoldInlined",2)
("unifyIndices'",2)
("withConstraint",2)
("withCurrentModule",2)
("zipMatrices",2)
("$callHoles",1)
("$cassignTerm'",1)
("$cfoldrCPattern",1)
("$cforceNotFree'",1)
("$cmaybeFlexiblePattern",1)
("$cnoShrink_sR9f",1)
("$cprettyPrec",1)
("$creduce'",1)
("$cshrinkC_sRbU",1)
("$cshrinkC_sRbV",1)
("$csynEq'",1)
("$fCheckInternalLevel'_$ccheckInternal'",1)
("$fEqArg_$c==5",1)
("$fEqDom'_$c==",1)
("$fEqList_$c==",1)
("$fEqRanged",1)
("$fEqWithOrigin",1)
("$fFree(,,)_$cfreeVars'1",1)
("$fFreeDom'_$cfreeVars'1",1)
("$fFreeEqualityView_$s$cfreeVars'",1)
("$fMonadReduceTCMT1",1)
("$fOrdList_$ccompare",1)
("$fPrettyArg_$cprettyList",1)
("$fPrettyArg_$cprettyPrec",1)
("$fPrettyElim'_$cprettyPrec",1)
("$fShowDom'",1)
("$wsingletonS",1)
("<?>",1)
("A.insertImplicitPatSynArgs",1)
("ANSI.putDoc",1)
("Agda.Auto.NarrowingSearch.Blocked",1)
("Agda.Auto.NarrowingSearch.PBlocked",1)
("Agda.Auto.NarrowingSearch.Term",1)
("Agda.Auto.SearchControl.$fTrav(,)_$ctrav2",1)
("Agda.Compiler.Common.doCompile1",1)
("Agda.Compiler.MAlonzo.Compiler.C:ReadGHCOpts",1)
("Agda.Interaction.BasicOps.$fPrettyIPFace'",1)
("Agda.Interaction.BasicOps.$fPrettyOutputConstraint_$cpretty",1)
("Agda.Interaction.EmacsCommand.$fEqLisp_$c==",1)
("Agda.Interaction.Highlighting.LaTeX.Base.$fMonadLogLaTeXReaderT",1)
("Agda.Interaction.Highlighting.Precise.$fIsBasicRangeMapaDelayedMerge",1)
("Agda.Interaction.Highlighting.Precise.$fIsBasicRangeMapaDelayedMerge_$ccoveringRange",1)
("Agda.Interaction.Highlighting.Precise.$fIsBasicRangeMapaDelayedMerge_$ctoList",1)
("Agda.Interaction.Highlighting.Precise.$fIsBasicRangeMapaDelayedMerge_$ctoMap",1)
("Agda.Interaction.Highlighting.Precise.$fShowDelayedMerge",1)
("Agda.Interaction.JSON.$fEncodeTCMList0_$cencodeTCM",1)
("Agda.Interaction.Options.HasOptions.$fHasOptionsExceptT",1)
("Agda.Interaction.Options.HasOptions.$fHasOptionsStateT",1)
("Agda.Syntax.Abstract.$fNFDataClause'_$crnf",1)
("Agda.Syntax.Abstract.$fShowLHSCore'_$cshowsPrec",1)
("Agda.Syntax.Abstract.Name.$fPrettyQNamed_$cpretty",1)
("Agda.Syntax.Abstract.Name.$fShowQNamed_$cshowsPrec",1)
("Agda.Syntax.Abstract.Name.$w$clensFixity",1)
("Agda.Syntax.Abstract.Pattern.$fAPatternLikeMaybe",1)
("Agda.Syntax.Abstract.Pattern.$fAPatternLikePattern'_$ctraverseAPatternM",1)
("Agda.Syntax.Abstract.Pretty.prettyAs",1)
("Agda.Syntax.Abstract.Views.$fDeclaredNamesClause'_$cdeclaredNames1",1)
("Agda.Syntax.Common.$fEqImportDirective'",1)
("Agda.Syntax.Common.$fEqUnderAddition",1)
("Agda.Syntax.Common.$fEqUnderComposition",1)
("Agda.Syntax.Common.$fEqUsing'",1)
("Agda.Syntax.Common.$fOrdArg",1)
("Agda.Syntax.Common.$fOrdImportedName'",1)
("Agda.Syntax.Common.$fOrdImportedName'_$c>=",1)
("Agda.Syntax.Common.$fPrettyRewriteEqn'_$cpretty",1)
("Agda.Syntax.Common.$fShowImportedName'",1)
("Agda.Syntax.Common.$fShowImportedName'_$cshowsPrec",1)
("Agda.Syntax.Common.$fShowNamed_$cshowsPrec",1)
("Agda.Syntax.Common.$fShowRanged",1)
("Agda.Syntax.Common.$fShowTerminationCheck_$cshow",1)
("Agda.Syntax.Common.$fShowUnderAddition",1)
("Agda.Syntax.Common.$fShowUnderComposition",1)
("Agda.Syntax.Common.$w$cshowsPrec6",1)
("Agda.Syntax.Common.Pretty.$fPrettyIntMap",1)
("Agda.Syntax.Common.Pretty.$fPrettyList_$cprettyList",1)
("Agda.Syntax.Common.Pretty.$fPrettyMap",1)
("Agda.Syntax.Common.Pretty.$fPrettyMap_$cprettyList",1)
("Agda.Syntax.Common.Pretty.$fPrettyNonEmpty_$cpretty",1)
("Agda.Syntax.Common.Pretty.$fPrettyNonEmpty_$cprettyList",1)
("Agda.Syntax.Common.Pretty.prettyMap",1)
("Agda.Syntax.Common.getNameOf1",1)
("Agda.Syntax.Concrete.$fShowAsName'",1)
("Agda.Syntax.Concrete.Fixity.C:MonadFixityError",1)
("Agda.Syntax.Concrete.Name.$fLensInScopeName_$clensInScope",1)
("Agda.Syntax.Concrete.Operators.Parser.argsP1",1)
("Agda.Syntax.Concrete.Operators.Parser.atomP1",1)
("Agda.Syntax.Concrete.Pretty.$fPrettyImportedName'",1)
("Agda.Syntax.Concrete.Pretty.$fPrettyImportedName'_$cprettyList",1)
("Agda.Syntax.Concrete.Pretty.$fShowImportDirective'",1)
("Agda.Syntax.Info.$fEqDefInfo'_$c==",1)
("Agda.Syntax.Info.$fNFDataDefInfo'_$crnf",1)
("Agda.Syntax.Internal.$fLensSortArg1",1)
("Agda.Syntax.Internal.$fNFDataTele_$crnf",1)
("Agda.Syntax.Internal.$fPrettyAbs_$cpretty",1)
("Agda.Syntax.Internal.$fPrettyDom'",1)
("Agda.Syntax.Internal.$fPrettyDom'_$cpretty",1)
("Agda.Syntax.Internal.$fPrettySubstitution'_$cpretty",1)
("Agda.Syntax.Internal.$fPrettyTele_$cpretty",1)
("Agda.Syntax.Internal.$fShowAbs",1)
("Agda.Syntax.Internal.$fShowAbs_$cshow",1)
("Agda.Syntax.Internal.$fShowAbs_$cshowsPrec",1)
("Agda.Syntax.Internal.$fShowDom'_$cshowList",1)
("Agda.Syntax.Internal.$fShowTele_$cshow",1)
("Agda.Syntax.Internal.$fShowTele_$cshowsPrec",1)
("Agda.Syntax.Internal.$fShowType''_$cshow",1)
("Agda.Syntax.Internal.$fTraversableAbs_$ctraverse",1)
("Agda.Syntax.Internal.$w$cshowsPrec9",1)
("Agda.Syntax.Internal.Blockers.$fSemigroupBlocked'",1)
("Agda.Syntax.Internal.Blockers.$fShowBlocked'_$cshow",1)
("Agda.Syntax.Internal.Blockers.$fShowBlocked'_$cshowsPrec1",1)
("Agda.Syntax.Internal.Blockers.$fShowNotBlocked'",1)
("Agda.Syntax.Internal.Blockers.$fShowNotBlocked'_$cshow",1)
("Agda.Syntax.Internal.Blockers.$fTraversableBlocked'_$ctraverse",1)
("Agda.Syntax.Internal.Defs.$fGetDefsAbs_$cgetDefs2",1)
("Agda.Syntax.Internal.Defs.$fGetDefsList0_$cgetDefs",1)
("Agda.Syntax.Internal.Elim.$fFoldableElim'_$cfoldMap",1)
("Agda.Syntax.Internal.Elim.$fShowElim'",1)
("Agda.Syntax.Internal.Elim.$fShowElim'_$cshowList",1)
("Agda.Syntax.Internal.Generic.$fTermLike(,)_$ctraverseTermM2",1)
("Agda.Syntax.Internal.Generic.$fTermLike(,,)_$cfoldTerm",1)
("Agda.Syntax.Internal.Generic.$fTermLike(,,,)_$cfoldTerm",1)
("Agda.Syntax.Internal.Generic.$fTermLikeArg_$s$ctraverseTermM",1)
("Agda.Syntax.Internal.Generic.$fTermLikeMaybe_$ctraverseTermM",1)
("Agda.Syntax.Internal.Generic.$fTermLikeTele",1)
("Agda.Syntax.Internal.Generic.$fTermLikeType''_$cfoldTerm1",1)
("Agda.Syntax.Internal.Generic.$fTermLikeType''_$ctraverseTermM",1)
("Agda.Syntax.Internal.MetaVars.$fAllMetas(,,)_$callMetas",1)
("Agda.Syntax.Internal.MetaVars.$fAllMetasDom'_$callMetas",1)
("Agda.Syntax.Internal.Names.$fNamesIn(,,)_$cnamesAndMetasIn'",1)
("Agda.Syntax.Internal.Names.$fNamesIn(,,,)_$cnamesAndMetasIn'",1)
("Agda.Syntax.Internal.Names.$fNamesInCase_$cnamesAndMetasIn'2",1)
("Agda.Syntax.Internal.Names.$fNamesInDefinition_$cnamesAndMetasIn'1",1)
("Agda.Syntax.Internal.Names.$fNamesInHashMap_$cnamesAndMetasIn'",1)
("Agda.Syntax.Internal.Pattern.$fPatternLikeaArg",1)
("Agda.Syntax.Internal.Pattern.$fPatternLikeaList_$ctraversePatternM",1)
("Agda.Syntax.Internal.Pattern.$fPatternLikeaNamed",1)
("Agda.Syntax.Internal.Pattern.$fPatternLikeaPattern'_$ctraversePatternM",1)
("Agda.Syntax.Position.$fEqInterval'",1)
("Agda.Syntax.Position.$fEqInterval'_$c==",1)
("Agda.Syntax.Position.$fHasRangeList2_$cgetRange",1)
("Agda.Syntax.Position.$fKillRange(,)_$ckillRange",1)
("Agda.Syntax.Position.$fOrdPosition'_$ccompare",1)
("Agda.Syntax.Position.$fOrdRange'_$c<",1)
("Agda.Syntax.Position.$fOrdRange'_$c>=",1)
("Agda.Syntax.Position.$fOrdRange'_$ccompare",1)
("Agda.Syntax.Position.$fPrettyPrintRange_$cpretty",1)
("Agda.Syntax.Position.$fSemigroupRange'_$csconcat",1)
("Agda.Syntax.Position.$fSemigroupRange'_$cstimes",1)
("Agda.Syntax.Position.$fShowInterval'",1)
("Agda.Syntax.Position.$fShowPosition'",1)
("Agda.Syntax.Scope.Base.C:InScope",1)
("Agda.Syntax.Translation.AbstractToConcrete.$fToConcrete(,)",1)
("Agda.Syntax.Translation.AbstractToConcrete.$fToConcreteList",1)
("Agda.Syntax.Translation.AbstractToConcrete.$w$cbindToConcrete2",1)
("Agda.Syntax.Translation.InternalToAbstract.$fReify(,)",1)
("Agda.Syntax.Translation.InternalToAbstract.$fReify(,)_$creify",1)
("Agda.Syntax.Translation.InternalToAbstract.$fReify(,)_$creify1",1)
("Agda.Syntax.Translation.InternalToAbstract.$fReifyAbs",1)
("Agda.Syntax.Translation.InternalToAbstract.$fReifyArg_$creify",1)
("Agda.Syntax.Translation.InternalToAbstract.$fReifyDom'_$s$creify",1)
("Agda.Syntax.Translation.InternalToAbstract.$fReifyElim'3",1)
("Agda.Syntax.Translation.InternalToAbstract.$fReifyLevel'_$creify",1)
("Agda.Syntax.Translation.InternalToAbstract.$fReifyNamed",1)
("Agda.Syntax.Translation.InternalToAbstract.$fReifyTele_$creify",1)
("Agda.Syntax.Translation.InternalToAbstract.$fReifyType''_$creify",1)
("Agda.Termination.CallGraph.$fPrettyCallGraph",1)
("Agda.Termination.CallGraph.$fPrettyCallGraph_$cpretty",1)
("Agda.Termination.CallMatrix.$fPrettyCMSet_$cpretty1",1)
("Agda.Termination.Monad.$fMonoidTerM5",1)
("Agda.Termination.Monad.$fPrettyTCMMasked_$cprettyTCM",1)
("Agda.Termination.Monad.$fShowMasked_$cshowsPrec",1)
("Agda.Termination.Monad.C:MonadTer",1)
("Agda.Termination.RecCheck.anyDefs13",1)
("Agda.Termination.SparseMatrix.$fOrdMIx",1)
("Agda.Termination.SparseMatrix.$fOrdMIx_$c<",1)
("Agda.Termination.SparseMatrix.$fPartialOrdMatrix_$ccomparable",1)
("Agda.Termination.SparseMatrix.$fShowMIx_$cshowsPrec",1)
("Agda.Termination.SparseMatrix.$fShowMatrix",1)
("Agda.Termination.SparseMatrix.$fShowMatrix_$cshow",1)
("Agda.Termination.SparseMatrix.$fShowSize_$cshowsPrec",1)
("Agda.Termination.SparseMatrix.$w$cdiagonal",1)
("Agda.Termination.SparseMatrix.$wtoLists",1)
("Agda.TypeChecking.CheckInternal.$fCheckInternalList_$ccheckInternal'",1)
("Agda.TypeChecking.CompiledClause.$fMonoidCase_$c<>",1)
("Agda.TypeChecking.CompiledClause.$fShowCompiledClauses'",1)
("Agda.TypeChecking.CompiledClause.$fTermLikeCompiledClauses'_$ctraverse",1)
("Agda.TypeChecking.CompiledClause.prettyMap__$sprettyMap_",1)
("Agda.TypeChecking.Conversion.compareType",1)
("Agda.TypeChecking.Coverage.Match.matchClause_$smatchPats",1)
("Agda.TypeChecking.Coverage.SplitTree.$fKillRangeSplitTree'_$ckillRange",1)
("Agda.TypeChecking.Coverage.SplitTree.$fNFDataSplitTree'_$crnf",1)
("Agda.TypeChecking.Coverage.SplitTree.$fShowSplitTree'",1)
("Agda.TypeChecking.Free.Lazy.$fEqFlexRig'",1)
("Agda.TypeChecking.Free.Lazy.$fEqVarMap'",1)
("Agda.TypeChecking.Free.Lazy.$fEqVarOcc'",1)
("Agda.TypeChecking.Free.Lazy.$fEqVarOcc'_$c==",1)
("Agda.TypeChecking.Free.Lazy.$fFreeDom'_$cfreeVars'",1)
("Agda.TypeChecking.Free.Lazy.$fFreeElim'_$s$cfreeVars'",1)
("Agda.TypeChecking.Free.Lazy.$fMonoidVarMap'",1)
("Agda.TypeChecking.Free.Lazy.$fMonoidVarOcc'",1)
("Agda.TypeChecking.Free.Lazy.$fSemigroupVarMap'",1)
("Agda.TypeChecking.Free.Lazy.$fSemigroupVarOcc'",1)
("Agda.TypeChecking.Free.Lazy.$fShowFlexRig'",1)
("Agda.TypeChecking.Free.Lazy.$fShowVarMap'",1)
("Agda.TypeChecking.Free.Lazy.$fShowVarOcc'",1)
("Agda.TypeChecking.Free.Lazy.$fShowVarOcc'_$cshowsPrec",1)
("Agda.TypeChecking.Free.Lazy.variable1",1)
("Agda.TypeChecking.Free.Precompute.$fPrecomputeFreeVarsAbs_$cprecomputeFreeVars",1)
("Agda.TypeChecking.Free.Reduce.C:ForceNotFree",1)
("Agda.TypeChecking.Implicit.implicitNamedArgs",1)
("Agda.TypeChecking.Level.$fShowSingleLevel'_$cshowsPrec",1)
("Agda.TypeChecking.MetaVars.C:ReduceAndEtaContract",1)
("Agda.TypeChecking.MetaVars.Occurs.prune1",1)
("Agda.TypeChecking.Monad.Base.$fFreeConstraint_$cfreeVars'",1)
("Agda.TypeChecking.Monad.Base.$fLensIsAbstractMetaInfo_$clensIsAbstract",1)
("Agda.TypeChecking.Monad.Base.$fMonadBlockReaderT",1)
("Agda.TypeChecking.Monad.Base.$fMonadFreshiListT",1)
("Agda.TypeChecking.Monad.Base.$fMonadFreshiListT_$cp1MonadFresh",1)
("Agda.TypeChecking.Monad.Base.$fMonadFreshiStateT",1)
("Agda.TypeChecking.Monad.Base.$fMonadReduceBlockT_$cliftReduce",1)
("Agda.TypeChecking.Monad.Base.$fMonadReduceReaderT",1)
("Agda.TypeChecking.Monad.Base.$fMonadReduceReaderT_$cliftReduce",1)
("Agda.TypeChecking.Monad.Base.$fMonadReduceStateT",1)
("Agda.TypeChecking.Monad.Base.$fMonadReduceWriterT",1)
("Agda.TypeChecking.Monad.Base.$fMonadStConcreteNamesStateT",1)
("Agda.TypeChecking.Monad.Base.$fMonadTCEnvBlockT",1)
("Agda.TypeChecking.Monad.Base.$fMonadTCEnvBlockT_$caskTC",1)
("Agda.TypeChecking.Monad.Base.$fMonadTCEnvExceptT_$cp1MonadTCEnv",1)
("Agda.TypeChecking.Monad.Base.$fMonadTCMExceptT_$cp5MonadTCM",1)
("Agda.TypeChecking.Monad.Base.$fMonadTCMReaderT_$cp2MonadTCM",1)
("Agda.TypeChecking.Monad.Base.$fMonadTCMReaderT_$cp5MonadTCM",1)
("Agda.TypeChecking.Monad.Base.$fMonadTCMWriterT",1)
("Agda.TypeChecking.Monad.Base.$fReadTCStateBlockT_$clocallyTCState",1)
("Agda.TypeChecking.Monad.Base.$fReadTCStateTCMT7",1)
("Agda.TypeChecking.Monad.Base.$fReadTCStateTCMT_$cwithTCState",1)
("Agda.TypeChecking.Monad.Base.C:HasFresh",1)
("Agda.TypeChecking.Monad.Base.useR",1)
("Agda.TypeChecking.Monad.Base.useTC",1)
("Agda.TypeChecking.Monad.Builtin.$fHasBuiltinsExceptT_$cp3HasBuiltins",1)
("Agda.TypeChecking.Monad.Builtin.$fHasBuiltinsMaybeT",1)
("Agda.TypeChecking.Monad.Builtin.$fHasBuiltinsReaderT_$cp1HasBuiltins",1)
("Agda.TypeChecking.Monad.Builtin.$fHasBuiltinsReaderT_$cp2HasBuiltins",1)
("Agda.TypeChecking.Monad.Builtin.$fHasBuiltinsWriterT",1)
("Agda.TypeChecking.Monad.Constraints.C:MonadConstraint",1)
("Agda.TypeChecking.Monad.Context.$fAddContext(,)1_$caddContext",1)
("Agda.TypeChecking.Monad.Context.$fAddContext(,)8_$caddContext",1)
("Agda.TypeChecking.Monad.Context.$fAddContext(,)_$caddContext",1)
("Agda.TypeChecking.Monad.Context.$fAddContextKeepNames_$caddContext",1)
("Agda.TypeChecking.Monad.Context.$fMonadAddContextBlockT",1)
("Agda.TypeChecking.Monad.Context.$fMonadAddContextBlockT_$caddCtx",1)
("Agda.TypeChecking.Monad.Context.$fMonadAddContextBlockT_$caddLetBinding'",1)
("Agda.TypeChecking.Monad.Context.$fMonadAddContextBlockT_$cwithFreshName",1)
("Agda.TypeChecking.Monad.Context.$fMonadAddContextMaybeT",1)
("Agda.TypeChecking.Monad.Context.$fMonadAddContextReaderT1",1)
("Agda.TypeChecking.Monad.Context.$fMonadAddContextReaderT_$caddCtx",1)
("Agda.TypeChecking.Monad.Context.$fMonadAddContextReaderT_$caddLetBinding'",1)
("Agda.TypeChecking.Monad.Context.$fMonadAddContextReaderT_$cupdateContext",1)
("Agda.TypeChecking.Monad.Context.$fMonadAddContextWriterT",1)
("Agda.TypeChecking.Monad.Context.$wmapAbstraction",1)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugBlockT",1)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugBlockT_$cverboseBracket",1)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugExceptT_$cp3MonadDebug",1)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugMaybeT_$cnowDebugPrinting",1)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugMaybeT_$ctraceDebugMessage",1)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugReaderT_$ctraceDebugMessage",1)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugReaderT_$cverboseBracket",1)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugStateT1",1)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugStateT_$ctraceDebugMessage",1)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugStateT_$cverboseBracket",1)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugWriterT_$cnowDebugPrinting",1)
("Agda.TypeChecking.Monad.Debug.$fMonadDebugWriterT_$ctraceDebugMessage",1)
("Agda.TypeChecking.Monad.Debug.$fReportSList1_$creportS",1)
("Agda.TypeChecking.Monad.MetaVars.$fIsInstantiatedMetaMetaId_$cisInstantiatedMeta",1)
("Agda.TypeChecking.Monad.MetaVars.$fMonadInteractionPointsStateT",1)
("Agda.TypeChecking.Monad.MetaVars.$fUnFreezeMetaMetaId_$cunfreezeMeta",1)
("Agda.TypeChecking.Monad.MetaVars.$wdontAssignMetas",1)
("Agda.TypeChecking.Monad.MetaVars.C:MonadMetaSolver",1)
("Agda.TypeChecking.Monad.MetaVars.lookupInteractionId",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMChangeT",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMExceptT",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMExceptT_$cp1PureTCM",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMExceptT_$cp4PureTCM",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMExceptT_$cp5PureTCM",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMExceptT_$cp7PureTCM",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMListT",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMListT_$cp1PureTCM",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMListT_$cp2PureTCM",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMListT_$cp4PureTCM",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMListT_$cp6PureTCM",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMReaderT_$cp1PureTCM",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMReaderT_$cp2PureTCM",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMReaderT_$cp3PureTCM",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMReaderT_$cp4PureTCM",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMReaderT_$cp5PureTCM",1)
("Agda.TypeChecking.Monad.Pure.$fPureTCMReaderT_$cp7PureTCM",1)
("Agda.TypeChecking.Monad.Signature.$fHasConstInfoBlockT",1)
("Agda.TypeChecking.Monad.Signature.$fHasConstInfoExceptT_$cp1HasConstInfo",1)
("Agda.TypeChecking.Monad.Signature.$fHasConstInfoExceptT_$cp3HasConstInfo",1)
("Agda.TypeChecking.Monad.Signature.$fHasConstInfoIdentityT",1)
("Agda.TypeChecking.Monad.Signature.$fHasConstInfoReaderT_$cp1HasConstInfo",1)
("Agda.TypeChecking.Monad.Signature.$fHasConstInfoStateT_$cgetConstInfo",1)
("Agda.TypeChecking.Monad.Signature.$fHasConstInfoWriterT",1)
("Agda.TypeChecking.Monad.Signature.$fHasConstInfoWriterT_$cgetConstInfo",1)
("Agda.TypeChecking.Monad.Trace.$fMonadTraceExceptT_$ctraceCall",1)
("Agda.TypeChecking.Monad.Trace.$fMonadTraceReaderT",1)
("Agda.TypeChecking.Monad.Trace.$fMonadTraceWriterT",1)
("Agda.TypeChecking.Monad.Trace.C:MonadTrace",1)
("Agda.TypeChecking.Names.$fMonadAddContextNamesT",1)
("Agda.TypeChecking.Names.$fMonadDebugNamesT_$cp3MonadDebug",1)
("Agda.TypeChecking.Names.$fMonadReduceNamesT_$cp1MonadReduce",1)
("Agda.TypeChecking.Names.$fMonadReduceNamesT_$cp2MonadReduce",1)
("Agda.TypeChecking.Names.applyN'1",1)
("Agda.TypeChecking.Positivity.$fShowEdge",1)
("Agda.TypeChecking.Positivity.$fShowEdge_$cshowsPrec",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMArg2_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMArg_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMElim'0_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMElim'_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMEqualityView_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMExpr_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMGraph_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMIsForced_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMJudgement_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMLiteral_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMMap_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMModuleName_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMNLPSort_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMOccurrence_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMPattern'0_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMPermutation_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMPolarity_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMProblemId_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMSplitTag_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.$fPrettyTCMTypeCheckingProblem_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.Call.$fPrettyTCMCallInfo_$cprettyTCM",1)
("Agda.TypeChecking.Pretty.Call.sayWhen_$ssayWhere",1)
("Agda.TypeChecking.Pretty.Constraint.prettyRangeConstraint",1)
("Agda.TypeChecking.Primitive.$fToTerm(,)",1)
("Agda.TypeChecking.Primitive.$fToTerm(,)6",1)
("Agda.TypeChecking.Primitive.$fToTermList",1)
("Agda.TypeChecking.Primitive.C:PrimTerm",1)
("Agda.TypeChecking.Primitive.Cubical.Base.$fReduceFamilyOrNot_$creduceB'",1)
("Agda.TypeChecking.ProjectionLike.computeDefType",1)
("Agda.TypeChecking.Records.$wetaExpandRecord'",1)
("Agda.TypeChecking.Records.$worderFields",1)
("Agda.TypeChecking.Reduce.$fInstantiate(,)_$cinstantiate'",1)
("Agda.TypeChecking.Reduce.$fInstantiateDom'_$cinstantiate'",1)
("Agda.TypeChecking.Reduce.$fNormalisePattern'_$cnormalise'",1)
("Agda.TypeChecking.Reduce.$fReduce(,)_$creduceB'",1)
("Agda.TypeChecking.Reduce.$fReduceAbs_$creduce'",1)
("Agda.TypeChecking.Reduce.$fReduceAbs_$creduceB'",1)
("Agda.TypeChecking.Reduce.$fReduceClosure",1)
("Agda.TypeChecking.Reduce.$fReduceClosure2",1)
("Agda.TypeChecking.Rewriting.Confluence.C:AllHoles",1)
("Agda.TypeChecking.Rewriting.NonLinPattern.$fNLPatToTermListList_$cnlPatToTerm1",1)
("Agda.TypeChecking.Rewriting.NonLinPattern.$fNLPatToTermListList_$s$cnlPatToTerm1",1)
("Agda.TypeChecking.Rules.LHS.Problem.$fChooseFlexFlexibleVar_$cchooseFlex",1)
("Agda.TypeChecking.Rules.LHS.Problem.$fPrettyTCMAbsurdPattern_$cprettyTCM",1)
("Agda.TypeChecking.Rules.LHS.Problem.$fPrettyTCMAsBinding_$cprettyTCM",1)
("Agda.TypeChecking.Rules.LHS.Problem.$fPrettyTCMDotPattern_$cprettyTCM",1)
("Agda.TypeChecking.Rules.LHS.Problem.$fPrettyTCMLHSState_$cprettyTCM",1)
("Agda.TypeChecking.Rules.LHS.Problem.$fPrettyTCMLeftoverPatterns_$cprettyTCM",1)
("Agda.TypeChecking.Rules.LHS.Problem.$fPrettyTCMProblemEq_$cprettyTCM",1)
("Agda.TypeChecking.Rules.LHS.Problem.$w$cshowsPrec1",1)
("Agda.TypeChecking.Rules.LHS.Unify.LeftInverse.$fPrettyTCMNoLeftInv_$cprettyTCM",1)
("Agda.TypeChecking.Serialise.Base.$wtickICode",1)
("Agda.TypeChecking.Serialise.Instances.Abstract.$fEmbPrjPattern'",1)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrj(,,)",1)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjArg39",1)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjEither",1)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjEither1",1)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjHasEta'",1)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjHasEta'1",1)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjImportedName'",1)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjList2",1)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjList_$cicode",1)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjMaybe",1)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjNamed",1)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjNonEmpty",1)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjNonEmpty_$cvalue",1)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjTrie",1)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjWithDefault'",1)
("Agda.TypeChecking.Serialise.Instances.Common.$fEmbPrjWithDefault'1",1)
("Agda.TypeChecking.Serialise.Instances.Highlighting.$fEmbPrjRangeMap",1)
("Agda.TypeChecking.Serialise.Instances.Highlighting.$fEmbPrjRangeMap1",1)
("Agda.TypeChecking.Serialise.Instances.Internal.$fEmbPrjBuiltin",1)
("Agda.TypeChecking.SizedTypes.Syntax.$fFlexsConstraint'_$cflexs",1)
("Agda.TypeChecking.SizedTypes.Syntax.$fFoldableConstraint'_$cfoldMap",1)
("Agda.TypeChecking.SizedTypes.Syntax.$fPrettySizeExpr'_$cpretty",1)
("Agda.TypeChecking.SizedTypes.Syntax.$fRigidsConstraint'_$crigids",1)
("Agda.TypeChecking.SizedTypes.Syntax.C:Flexs",1)
("Agda.TypeChecking.Substitute.$fEqBlocked'",1)
("Agda.TypeChecking.Substitute.$fEqBlocked'_$c==",1)
("Agda.TypeChecking.Substitute.$fOrdTele_$capplySubst",1)
("Agda.TypeChecking.Substitute.$fSubst(,,)_$capplySubst",1)
("Agda.TypeChecking.Substitute.$fSubstBlocked'",1)
("Agda.TypeChecking.Telescope.$fxPiApplyMList",1)
("Agda.TypeChecking.Warnings.$fMonadWarningReaderT",1)
("Agda.TypeChecking.Warnings.C:MonadWarning",1)
("Agda.Utils.Bag.$fShowBag",1)
("Agda.Utils.Benchmark.$fMonadBenchExceptT",1)
("Agda.Utils.Benchmark.$fMonadBenchStateT",1)
("Agda.Utils.Benchmark.$fNFDataBenchmark_$crnf",1)
("Agda.Utils.Benchmark.$fPrettyBenchmark_$cpretty",1)
("Agda.Utils.Benchmark.billTo",1)
("Agda.Utils.BiMap.$fShowBiMap",1)
("Agda.Utils.BiMap.$fShowBiMap_$cshow",1)
("Agda.Utils.BiMap.mapWithKeyFixedTagsPrecondition1",1)
("Agda.Utils.Favorites.$fSemigroupFavorites_$csconcat",1)
("Agda.Utils.Favorites.$fSemigroupFavorites_$cstimes",1)
("Agda.Utils.Favorites.$fShowFavorites",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.$fEqEdge",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.$fEqEdge_$c==",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.$fOrdEdge",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.$fOrdEdge_$c>=",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.$fShowEdge",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.$fShowEdge_$cshowsPrec",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.$fShowGraph",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.$w$cshowsPrec",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.$w$cshowsPrec1",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.$wcomputeNodes",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.clean1",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.filterNodes1",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.fromNodes1",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.reachableFromInternal",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.removeEdge1",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.renameNodes1",1)
("Agda.Utils.Graph.AdjacencyMap.Unidirectional.transpose1",1)
("Agda.Utils.HashTable.$winsert",1)
("Agda.Utils.HashTable.$wlookup",1)
("Agda.Utils.HashTable.insert1",1)
("Agda.Utils.HashTable.lookup1",1)
("Agda.Utils.HashTable.toList1",1)
("Agda.Utils.List2.$fFoldableList2_$cfoldMap",1)
("Agda.Utils.List2.$fShowList2",1)
("Agda.Utils.ListT.$fAlternativeListT",1)
("Agda.Utils.ListT.$fAlternativeListT1",1)
("Agda.Utils.ListT.$fAlternativeListT4",1)
("Agda.Utils.ListT.$fApplicativeListT",1)
("Agda.Utils.ListT.$fApplicativeListT2",1)
("Agda.Utils.ListT.$fApplicativeListT_$c<*>",1)
("Agda.Utils.ListT.$fMonadListT",1)
("Agda.Utils.ListT.$fMonadPlusListT",1)
("Agda.Utils.Monad.mapMaybeM",1)
("Agda.Utils.Null.$fNullStateT",1)
("Agda.Utils.POMonoid.C:LeftClosedPOMonoid",1)
("Agda.Utils.POMonoid.C:POMonoid",1)
("Agda.Utils.POMonoid.C:POSemigroup",1)
("Agda.Utils.Parser.MemoisedCPS.$fParserClassParserkrtok1",1)
("Agda.Utils.Parser.MemoisedCPS.$w$cmemoise1",1)
("Agda.Utils.Parser.MemoisedCPS.C:ParserClass",1)
("Agda.Utils.PartialOrd.$fShowInclusion_$cshowsPrec",1)
("Agda.Utils.RangeMap.$fSemigroupRangeMap_$csconcat",1)
("Agda.Utils.RangeMap.$fSemigroupRangeMap_$cstimes",1)
("Agda.Utils.Semigroup.$fSemigroupStateT",1)
("Agda.Utils.Singleton.$fCollectionaSet",1)
("Agda.Utils.Singleton.C:CMaybe",1)
("Agda.Utils.Trie.$fFoldableTrie_$cfoldMap",1)
("Agda.Utils.Trie.$fShowTrie_$cshowsPrec",1)
("Agda.Utils.Update.$fApplicativeChangeT",1)
("Agda.Utils.Update.$fMonadChangeIdentityT",1)
("Agda.Utils.Update.C:MonadChange",1)
("Agda.Utils.Update.C:Updater1",1)
("Agda.Utils.WithDefault.$fShowWithDefault'_$cshowsPrec",1)
("Agda.Utils.Zipper.$fZipperComposeZipper_$cfirstHole",1)
("Agda.Utils.Zipper.$fZipperComposeZipper_$cnextHole",1)
("B.billTo",1)
("Bench.billToCPS",1)
("BiMap.insert",1)
("BiMap.insertLookupWithKey",1)
("BiMap.mapWithKey",1)
("C.splitEllipsis",1)
("C:Ord",1)
("C:Subst",1)
("Control.Exception.Handler",1)
("Control.Monad.Error.Class.$fMonadErroreReaderT_$cthrowError",1)
("Control.Monad.Error.Class.$fMonadErroreStateT0_$cp1MonadError",1)
("Control.Monad.Reader.Class.$fMonadReaderrExceptT_$cask",1)
("Control.Monad.Reader.Class.$fMonadReaderrStateT0",1)
("Control.Monad.Reader.Class.$fMonadReaderrStateT0_$cp1MonadReader",1)
("Control.Monad.Reader.Class.$fMonadReaderrStateT1",1)
("Control.Monad.ST.Trans.runSTT",1)
("Control.Monad.State.Class.$fMonadStatesStateT",1)
("Control.Monad.State.Class.$fMonadStatesWriterT0",1)
("Control.Monad.Trans.Control.C:MonadTransControl",1)
("Control.Monad.Trans.Except.$fApplicativeExceptT",1)
("Control.Monad.Trans.Except.$fApplicativeExceptT1",1)
("Control.Monad.Trans.Except.$fApplicativeExceptT3",1)
("Control.Monad.Trans.Except.$fFunctorExceptT_$c<$",1)
("Control.Monad.Trans.Except.$fMonadExceptT_$cp1Monad",1)
("Control.Monad.Trans.Except.$fMonadFailExceptT_$cp1MonadFail",1)
("Control.Monad.Trans.Except.$fMonadIOExceptT",1)
("Control.Monad.Trans.Except.$fMonadIOExceptT_$cp1MonadIO",1)
("Control.Monad.Trans.Maybe.$fAlternativeMaybeT",1)
("Control.Monad.Trans.Maybe.$fMonadMaybeT1",1)
("Control.Monad.Trans.Maybe.$fMonadMaybeT_$cp1Monad",1)
("Control.Monad.Trans.Reader.$fFunctorReaderT",1)
("Control.Monad.Trans.Reader.$fMonadIOReaderT_$cp1MonadIO",1)
("Control.Monad.Trans.State.Lazy.$fMonadStateT_$cp1Monad",1)
("Control.Monad.Trans.State.Strict.$fMonadStateT",1)
("Control.Monad.Trans.Writer.Lazy.$fFunctorWriterT",1)
("Control.Monad.Trans.Writer.Lazy.$fMonadIOWriterT",1)
("Control.Monad.Trans.Writer.Strict.$fApplicativeWriterT2",1)
("Control.Monad.Trans.Writer.Strict.$fApplicativeWriterT_$cliftA2",1)
("Control.Monad.Trans.Writer.Strict.$fFunctorWriterT_$c<$",1)
("Control.Monad.Writer.Class.$fMonadWriterwExceptT1",1)
("Control.Monad.Writer.Class.$fMonadWriterwExceptT_$clisten",1)
("Control.Monad.Writer.Class.$fMonadWriterwReaderT",1)
("Control.Monad.Writer.Class.$fMonadWriterwReaderT_$cp2MonadWriter",1)
("Control.Monad.Writer.Class.C:MonadWriter",1)
("Data.Either.$fOrdEither",1)
("Data.Either.$fShowEither",1)
("Data.Equivalence.STT.$wcombineEntries",1)
("Data.Equivalence.STT.classDesc1",1)
("Data.Equivalence.STT.classDesc2",1)
("Data.Functor.Compose.$fFunctorCompose",1)
("Data.HashMap.Internal.$fShowHashMap_$cshowsPrec",1)
("Data.HashMap.Internal.$w$cshowsPrec",1)
("Data.HashSet.Internal.$fSemigroupHashSet_$csconcat",1)
("Data.IntMap.Internal.$fOrdIntMap",1)
("Data.IntMap.Internal.$fOrdIntMap_$ccompare",1)
("Data.IntMap.Internal.$fShowIntMap",1)
("Data.IntMap.Internal.nequal",1)
("Data.Map.Internal.$fEqMap",1)
("Data.Map.Internal.$w$crnf",1)
("Data.Sequence.Internal.$fShowSeq",1)
("Data.Sequence.Internal.$w$cshowsPrec",1)
("Data.Set.Internal.$fMonoidSet_$cmconcat",1)
("Data.Set.Internal.$fOrdSet_$cmax",1)
("Data.Set.Internal.$fOrdSet_$cmin",1)
("Data.Set.Internal.$fSemigroupSet",1)
("Data.Set.Internal.$fSemigroupSet_$csconcat",1)
("Data.Set.Internal.$fShowSet",1)
("Data.Set.Internal.combineEq",1)
("Data.Strict.Maybe.$fMonoidMaybe",1)
("Data.Strict.Maybe.$fReadMaybe_$creadsPrec",1)
("Data.Strict.Maybe.$fSemigroupMaybe",1)
("Data.Strict.Tuple.$fShowPair_$cshowsPrec",1)
("E.throw",1)
("Fav.compareFavorites",1)
("Fav.compareWithFavorites",1)
("Fav.union",1)
("GHC.Base.$fOrdNonEmpty_$c<=",1)
("GHC.Base.$fOrdNonEmpty_$cmax",1)
("GHC.Base.$fOrdNonEmpty_$cmin",1)
("GHC.Base.$fSemigroup(,,,,)_$c<>",1)
("GHC.Base.C:MonadPlus",1)
("GHC.Maybe.$fEqMaybe_$c==",1)
("GHC.Read.$fRead(,)1",1)
("GHC.Read.$fReadList_$creadsPrec",1)
("GHC.Show.$fShow(,)_$cshowList",1)
("GHC.Show.$fShow(,,,)_$cshowsPrec",1)
("GHC.Show.$fShowList_$cshow",1)
("Graph.addUniqueInts",1)
("Graph.filterNodesKeepingEdges",1)
("Graph.gaussJordanFloydWarshallMcNaughtonYamada",1)
("Graph.longestPaths",1)
("Graph.lookup",1)
("Graph.topSort",1)
("H.initialize",1)
("Haskeline.completeFilename",1)
("Internal.Helpers.$fArbitraryNonEmpty",1)
("Internal.Helpers.$fCoArbitraryNonEmpty_$ccoarbitrary",1)
("Internal.Helpers.isAlmostSemimodule1",1)
("Internal.Helpers.isMonoidMorphism2",1)
("Internal.TypeChecking.Free.Lazy.$fArbitraryFlexRig'",1)
("Internal.TypeChecking.Free.Lazy.$fArbitraryVarMap'",1)
("Internal.TypeChecking.Free.Lazy.$fArbitraryVarOcc'",1)
("Internal.TypeChecking.Free.Lazy.$fArbitraryVarOcc'1",1)
("Internal.Utils.Maybe.Strict.$fArbitraryMaybe_$carbitrary",1)
("Internal.Utils.RangeMap.$fArbitraryRangeMap",1)
("Internal.Utils.RangeMap.$fArbitraryRangeMap3",1)
("Internal.Utils.RangeMap.$fArbitraryRangeMap_$cshrink",1)
("L.commonPrefix",1)
("Lens.isBuiltinModule",1)
("Lens.isBuiltinModuleWithSafePostulates",1)
("Lens.isPrimitiveModule",1)
("List.downFrom",1)
("List.fastDistinct",1)
("List.isSubsequenceOf",1)
("List.lookup",1)
("List1.groupOn1",1)
("List1.nubM",1)
("M.withScope",1)
("Map.adjustM'",1)
("Matrix.fromLists",1)
("P.prettyList",1)
("P.prettyMap",1)
("PP.prettyList_",1)
("Pa.parseFile",1)
("Prelude.lookup",1)
("Semiring.semiringInvariant",1)
("Set.disjoint",1)
("SynEq.checkSyntacticEquality",1)
("System.Console.Haskeline.getInputCmdLine",1)
("Term.terminatesFilter",1)
("Test.QuickCheck.Arbitrary.$fArbitraryIntMap_$cshrink",1)
("Test.QuickCheck.Arbitrary.$fArbitraryList_$cshrink",1)
("Test.QuickCheck.Arbitrary.$fArbitraryMaybe",1)
("Test.QuickCheck.Arbitrary.$fArbitrarySeq",1)
("Test.QuickCheck.Arbitrary.$fArbitrarySeq1",1)
("Test.QuickCheck.Arbitrary.$fArbitrarySeq_$cshrink",1)
("Test.QuickCheck.Arbitrary.$fCoArbitrary(,,)_$ccoarbitrary",1)
("Test.QuickCheck.Arbitrary.$w$carbitrary10",1)
("Test.QuickCheck.Function.$fArbitraryFun",1)
("Test.QuickCheck.Function.$fShowFun",1)
("Test.QuickCheck.Modifiers.$fArbitraryNonNegative_$cshrink",1)
("Test.QuickCheck.Modifiers.$fArbitraryPositive",1)
("Test.QuickCheck.Modifiers.$fArbitraryPositive_$cshrink",1)
("Test.QuickCheck.Modifiers.$fArbitrarySmall",1)
("Test.QuickCheck.Modifiers.$fNumSmall",1)
("Test.QuickCheck.Modifiers.$fOrdPositive",1)
("Test.QuickCheck.Modifiers.$fOrdPositive_$cp1Ord",1)
("Test.QuickCheck.Modifiers.$fOrdSmall",1)
("Test.QuickCheck.Modifiers.$fShowPositive",1)
("Test.QuickCheck.Modifiers.$fShowPositive_$cshowsPrec",1)
("Test.QuickCheck.Modifiers.$fShowSmall",1)
("Test.QuickCheck.Property.mapSize1",1)
("Test.Tasty.Options.OptionValue",1)
("Text.PrettyPrint.Annotated.HughesPJ.$fNFDataDoc_$crnf",1)
("Text.Regex.TDFA.NewDFA.Engine.execMatch",1)
("Trie.lookupPath",1)
("UtilsBench.billTo",1)
("abortIfBlocked",1)
("absAppN",1)
("abstractT",1)
("addCoercions",1)
("addUniqueInts",1)
("aeson-2.2.0.0-KcH800TS6us8tZ6AZDtIQh:Data.Aeson.Types.ToJSON.$fToJSONKeyList_$ctoJSONList",1)
("altM1",1)
("alterPrecondition",1)
("annotateDecls",1)
("annotateExpr",1)
("anyListT",1)
("applyModalityToContextFunBody",1)
("applyQuantityToJudgement",1)
("auto",1)
("biMapInvariant",1)
("binary-0.8.9.1:Data.Binary.Class.$fBinaryIntMap2",1)
("binary-0.8.9.1:Data.Binary.Class.$fBinaryList",1)
("binary-0.8.9.1:Data.Binary.Class.$fBinaryList1",1)
("bindN1",1)
("blankNotInScope",1)
("boundedSizeMetaHook",1)
("buildSubstitution",1)
("builtinLevelKit",1)
("checkModality",1)
("checkModality'",1)
("checkModalityArgs",1)
("checkPatternLinearity",1)
("checkSortOfSplitVar",1)
("classify",1)
("compareFavorites",1)
("compareLevel",1)
("compareWithFavorites",1)
("completeIter",1)
("completionStep",1)
("computeNodes",1)
("concatListT",1)
("concatMapM",1)
("conidView'",1)
("contains",1)
("count",1)
("coveringRangeProperty",1)
("createMetaInfo'",1)
("currentModuleNameHash",1)
("currentTopLevelModule",1)
("dagInvariant",1)
("deepEtaExpandPoly",1)
("defaultAddLetBinding'",1)
("defaultGetConstInfo",1)
("defaultLevelsToZero",1)
("defaultOpenLevelsToZero",1)
("defaultPageGen",1)
("discrete",1)
("dlist-1.0-9DO2KPbnPyW7Sgb6uyyuAa:Data.DList.Internal.$fShowDList",1)
("dlist-1.0-9DO2KPbnPyW7Sgb6uyyuAa:Data.DList.Internal.$fShowDList_$cshowsPrec",1)
("dropWhileM",1)
("edgesFrom",1)
("edgesTo",1)
("editDistanceSpec",1)
("eligibleForProjectionLike",1)
("elimView",1)
("equalTerm",1)
("equalTermOnFace",1)
("etaContractRecord",1)
("etaExpandRecord'_",1)
("fiber",1)
("filterNodesKeepingEdges",1)
("fixitiesAndPolarities",1)
("flattenTel",1)
("forceNotFree",1)
("freezeMetas",1)
("fromDistinctAscendingListsPrecondition",1)
("fromEdges",1)
("fromIndexList",1)
("fromList",1)
("fromListPrecondition",1)
("fsep",1)
("fuseIntervals",1)
("fwords",1)
("gaussJordanFloydWarshallMcNaughtonYamada",1)
("gaussJordanFloydWarshallMcNaughtonYamadaReference",1)
("generateLaTeXIO",1)
("genericElemIndex",1)
("getAllConstraints",1)
("getAllPatternSyns",1)
("getAllUnsolvedWarnings",1)
("getBuiltinName'",1)
("getCachedAgdaLibFile",1)
("getCachedProjectConfig",1)
("getClausesAsRewriteRules",1)
("getConHead",1)
("getConstructorData",1)
("getConstructorInfo'",1)
("getCurrentPath",1)
("getDatatypeArgs",1)
("getDefType",1)
("getIncludeDirs",1)
("getInteractionMetas",1)
("getInteractionRange",1)
("getInteractionScope",1)
("getLeftoverPatterns",1)
("getLetBindings",1)
("getMetaContextArgs",1)
("getMetaType",1)
("getNameOfConstrained",1)
("getNumberOfParameters",1)
("getPolarity'",1)
("getPrettyVisitedModules",1)
("getPrimitiveName'",1)
("getQNameFromTerm",1)
("getUniqueMetasRanges",1)
("getUnsolvedMetas",1)
("getUserWarnings",1)
("ghc-prim:GHC.Classes.$fOrd(,)_$c>=",1)
("ghc-prim:GHC.Classes.$fOrd(,)_$ccompare",1)
("ghc-prim:GHC.Classes.$fOrd(,,)_$ccompare",1)
("glamN",1)
("hasAccessibleDef",1)
("hasLeftAdjoint",1)
("hasQuantity0",1)
("hashable-1.4.2.0-JpceLkdcZ7ZDqNNSVzcDJ:Data.Hashable.Class.$fHashableList_$cp1Hashable",1)
("haskeline-0.8.2.1:System.Console.Haskeline.InputT.$fMonadIOInputT",1)
("haskeline-0.8.2.1:System.Console.Haskeline.InputT.$fMonadInputT",1)
("hcomp",1)
("hypGraph",1)
("idViewAsPath",1)
("ifNotPiOrPathType",1)
("ifPiB",1)
("inConcreteOrAbstractMode",1)
("inferFunSort",1)
("insert",1)
("insertImplicitBindersT1",1)
("insertLookupWithKey",1)
("insertPrecondition",1)
("interleaveRanges",1)
("intersectWith",1)
("intervalInvariant",1)
("invLookup",1)
("invariant",1)
("isAssociative",1)
("isBinderUsed",1)
("isBlocked",1)
("isBounded",1)
("isCommutative",1)
("isEtaCon",1)
("isFrozen",1)
("isGaloisConnection",1)
("isIdentity",1)
("isInstantiatedMeta'",1)
("isInterval",1)
("isLeftDistributive",1)
("isMonotoneComposition",1)
("isPath",1)
("isPathCons",1)
("isProjectionButNotCoinductive",1)
("isRecord",1)
("isRemoteMeta",1)
("isRightDistributive",1)
("isSingletonRecord'",1)
("isSizeProblem",1)
("isTrivialPattern",1)
("isZero",1)
("iterateSolver",1)
("lIndex",1)
("leqSort",1)
("leqType",1)
("levelView'",1)
("literal",1)
("longestPaths",1)
("lookupMetaModality",1)
("lookupPath",1)
("map",1)
("mapMaybeM",1)
("mapScopeM_",1)
("mapWithKey",1)
("mapWithKeyPrecondition",1)
("match",1)
("matchCopatterns",1)
("matrix",1)
("measureTime",1)
("memo",1)
("memoRec",1)
("mkCompLazy",1)
("modifyArgOccurrences",1)
("nameSuffix",1)
("namesAndMetasIn",1)
("nest",1)
("newInstanceMeta",1)
("newMetaArg",1)
("newNamedValueMeta",1)
("newTelMeta",1)
("noCheckCover",1)
("nubFavouriteOn",1)
("onBlockingMetasM",1)
("opP",1)
("orEitherM",1)
("parallelS",1)
("parse",1)
("parseFile",1)
("pathTelescope",1)
("prepareCommonAssets",1)
("prepareCommonDestinationAssets",1)
("prettyAssign",1)
("prettyDuplicateFields",1)
("prettyInterestingConstraints",1)
("prettyMap_",1)
("prettyR",1)
("prettyRangeConstraint",1)
("prettyTooManyFields",1)
("prettyWarningName",1)
("primBody",1)
("pwords",1)
("random-1.2.1.1-vzSnaOmaBQ4bTl4bGMjtH:System.Random.Internal.$fStatefulGenStateGenMm",1)
("random-1.2.1.1-vzSnaOmaBQ4bTl4bGMjtH:System.Random.Internal.$w$suniformIntegralM",1)
("readMaybe",1)
("reallyFree",1)
("recordRHSToCopatterns",1)
("reduceHead",1)
("regex-base-0.94.0.2-2THHg9sUqe91L76jYoGSv6:Text.Regex.Base.Context.$fRegexContextabAllTextSubmatches0_$s$cmatchM",1)
("reifyDisplayFormP",1)
("removeNodes",1)
("renderDecoratedM",1)
("renderError",1)
("runSTT",1)
("sameDef",1)
("saturateOpaqueBlocks",1)
("sccDAG'",1)
("sequenceListT",1)
("simplify1",1)
("sizeSuc",1)
("sizeSucName",1)
("solvingProblems",1)
("splittableCohesion",1)
("storeCachedAgdaLibFile",1)
("storeCachedProjectConfig",1)
("stripPrefix",1)
("stripReversedSuffix",1)
("takeAwakeConstraint'",1)
("teleDoms",1)
("toAbstractWithoutImplicit",1)
("toCType",1)
("toListProperty",1)
("toSparseRows",1)
("transpSys",1)
("traverse'",1)
("tryRecordType",1)
("tryResolveName",1)
("tryStrengthen",1)
("typeError'_",1)
("union",1)
("unionPrecondition",1)
("unionWith",1)
("unions",1)
("uniqOn",1)
("unsafePragma",1)
("updateProblemRest",1)
("useNamesFromProblemEqs",1)
("walkSatisfying",1)
("withFrozenMetas",1)
